stages:
  - 项目打包
  - 镜像构建
  - 归档产物
  - 镜像推送
  - 集群部署

variables:
  # 从CI/CD配置中读取环境变量
  PROJECT_NAME: $PROJECT_NAME
  IMAGE_VERSION: $CI_PIPELINE_IID
  DOCKER_REGISTRY: $DOCKER_REGISTRY
  MY_PROFILE: $SPRING_PROFILE_ACTIVE
  MY_SERVER: $INFRASTRUCTURE_HOST

Package With Maven:
  stage: 项目打包
  script:
    - pwd
    - ls -al
    - mvn clean package -Dmaven.test.skip=true
  cache:
    key: binaries-cache
    paths:
      - hiseas-center-user-service/target/*.jar

Build Docker Image:
  stage: 镜像构建
  script:
    - pwd
    - ls -al
    - docker build  --build-arg DOCKER_REGISTRY=$DOCKER_REGISTRY  --build-arg PROFILE=$MY_PROFILE   --build-arg SERVER_URL=$MY_SERVER  -t $DOCKER_REGISTRY/$PROJECT_NAME:v$IMAGE_VERSION .
  cache:
    key: binaries-cache
    paths:
      - hiseas-center-user-service/target/*.jar

Archive Tag Artifact:
  stage: 归档产物
  rules:
    - if: '$CI_COMMIT_TAG'
  script:
    - echo "Archiving Artifacts"
  artifacts:
    name: $PROJECT_NAME-$CI_COMMIT_TAG
    paths:
      - target/*.jar

Push Docker Image:
  stage: 镜像推送
  script:
    - echo "Pushing Docker image to $DOCKER_REGISTRY"
    - docker push $DOCKER_REGISTRY/$PROJECT_NAME:v$IMAGE_VERSION

Deploy Kubernetes:
  stage: 集群部署
  script:
    - echo "Deploying Kubernetes"
    - cd /usr/local/app/hiseas
    # 第一次执行
    - kubectl apply -f $PROJECT_NAME-$MY_PROFILE.yaml
    - kubectl set image deployment/$PROJECT_NAME-$MY_PROFILE $PROJECT_NAME-$MY_PROFILE=$DOCKER_REGISTRY/$PROJECT_NAME:v$IMAGE_VERSION -n hiseas-dev



